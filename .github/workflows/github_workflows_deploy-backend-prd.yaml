name: Deploy Backend (Prod)

on:
  push:
    branches:
      - main

jobs:
  deploy-backend-prd:
    runs-on: [self-hosted, Windows, X64, prod-runner]

    steps:
      # 1. 현재 소스 백업
      - name: Backup current source files
        run: |
          $baseDir = 'D:\actions_work\netcore'
          $sourceDir = "$baseDir\source\backend"
          $backupBaseDir = "$baseDir\backup\source\backend"
          $currentMonthDir = "$backupBaseDir\$(Get-Date -Format 'yyyyMM')"
          $currentDateTime = "$(Get-Date -Format 'yyyyMMddHHmmss').zip"

          if (!(Test-Path -Path $currentMonthDir)) {
            New-Item -ItemType Directory -Path $currentMonthDir -Force
          }

          $backupFile = Join-Path -Path $currentMonthDir -ChildPath $currentDateTime
          Compress-Archive -Path "$sourceDir\*" -DestinationPath $backupFile -Force
          Write-Host "Current source files have been backed up to: $backupFile"

      # 2. 현재 배포 파일 백업
      - name: Backup current deploy files
        run: |
          $baseDir = 'D:\actions_work\netcore'
          $deployDir = "$baseDir\deploy\backend"
          $backupBaseDir = "$baseDir\backup\deploy\backend"
          $currentMonthDir = "$backupBaseDir\$(Get-Date -Format 'yyyyMM')"
          $currentDateTime = "$(Get-Date -Format 'yyyyMMddHHmmss').zip"

          if (!(Test-Path -Path $currentMonthDir)) {
            New-Item -ItemType Directory -Path $currentMonthDir -Force
          }

          $backupFile = Join-Path -Path $currentMonthDir -ChildPath $currentDateTime
          Compress-Archive -Path "$deployDir\*" -DestinationPath $backupFile -Force
          Write-Host "Deploy files have been backed up to: $backupFile"

      # 3. 소스 코드 다운로드 (Dev 저장소에서 소스 가져오기)
      - name: Checkout source repository
        uses: actions/checkout@v4
        with:
          repository: KTNetCoreSolution/backend
          ref: main
          token: ${{ secrets.NETCORE_DEV_BACKEND_APP_TOKEN }}
          path: source/backend

      # 4. Java 설치
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # 5. 환경 파일(.env) 적용
      - name: Apply production .env file
        run: |
          Copy-Item -Path "D:\actions_work\netcore\source\backend\.env" -Destination "D:\actions_work\netcore\source\backend\.env" -Force
          Write-Host ".env file applied successfully."

      # 6. 빌드 작업 실행
      - name: Build backend
        run: |
          cd 'D:\actions_work\netcore\source\backend'
          ./gradlew clean build

      # 7. 빌드 결과물 배포 디렉토리로 복사
      - name: Deploy backend build
        run: |
          $baseDir = 'D:\actions_work\netcore'
          $deployDir = "$baseDir\deploy\backend"
          $jarFile = "$baseDir\source\backend\build\libs\netcore.jar"

          if (!(Test-Path -Path $deployDir)) {
            New-Item -ItemType Directory -Path $deployDir -Force
          }

          Copy-Item -Path $jarFile -Destination "$deployDir\netcore.jar" -Force
          Write-Host "Backend JAR file has been copied to: $deployDir\netcore.jar"

      # 8. 배포 저장소에 커밋 및 푸시 (Prod 저장소)
      - name: Commit and push to deployment repo
        run: |
          cd 'D:\actions_work\netcore\deploy\backend'
          git init
          git remote add origin https://github.com/KTNetCoreSolution/backendprod.git
          git add .
          git commit -m "Deploy backend build at $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')"
          git branch -M main
          git push -u origin main --force
        env:
          GITHUB_TOKEN: ${{ secrets.NETCORE_PROD_BACKEND_APP_TOKEN }}

      # 9. 서비스 재시작
      - name: Restart Backend Service
        run: |
          $serviceName = 'KTNetCoreBackendService'
          if (Get-Service -Name $serviceName -ErrorAction SilentlyContinue) {
            Stop-Service -Name $serviceName -Force
            Start-Service -Name $serviceName
            Write-Host "Service '$serviceName' restarted successfully."
          } else {
            Write-Host "Service '$serviceName' does not exist. Skipping restart."